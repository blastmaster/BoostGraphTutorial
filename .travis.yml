language: cpp
compiler: gcc
sudo: require
dist: trusty # Qt5, from https://gist.github.com/jreese/6207161#gistcomment-1462109

# Coverity Scan
env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "L6br6NI6FEZck2tm3U3/CJ0W2UjBqginvkdwkwsTOmrMJ4LaxRlVZ4K0lBEsy5Z4QbMLmv9AVeadfTm/Rczg+U1d46xPP3mEC/5DgfmVNRDv3mmstEThj44pjJgmRv5Igt7AXxgYWqvlEYN5ItaX+iETWYeS+Z4K7ZDEqVvniCyTPKs6b9C22Bt31MtAkgANqt27Y1dGVjTte0MCEpHZ1Y/Nv233W9jwIryn1gKM9yXDnwj7axDh/fAgXrWyyGe0MPgU4jjY9X5zN/Ke7i70DiO+8ctYseD2H2NMvTsPHqaKE1aIVtlIg+FktCMaFwVa+TzASdzHztWdLETMy+C0zmvLdwrvRhOllk1hmzqAl3xNKKaN2YskJMZfuWgG0HCyy4RZGCFpRCdzl1vfwypgDvwjR8nOr0XW2ehrn6E2KbN+XheEsoRc6ZOk2Myt1XQZ16h0Ff8gvJVSFTNPvU2nFwO+wWzOYN1j9Ds5V0+OJF5GYSXH2vVV0X7p6+yK52k6aUijoSrf25dFcwoib4NNqWmvJtQVI1hi5Y8fBlxDaZKK0MJbHn6hQxxs7quzRdrlnewDDIDavp2toCQdB6riIhXkOxUROhFKV9GMfQftflpSM9/SWu4Wh9f4IplvkGMA5c+5CLrZajymJpnGaZGNuLabPX8i8bu/gvXoyguBpwY="

addons: 
  # Boost
  apt: 
    packages: libboost-all-dev
  # Coverity Scan
  coverity_scan:
    project:
      name: "richelbilderbeek/BoostGraphTutorial"
      description: "Build submitted via Travis CI"
    notification_email: richel@richelbilderbeek.nl
    build_command_prepend: "./configure; make clean"
    build_command:   "make -j 4"
    branch_pattern: coverity_scan

before_install:
  # C++14
  - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  # Coverity Scan
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

install: 
  # C++14
  - sudo apt-get install -qq g++-5
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 90
  # gcov
  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-5 90
  - sudo pip install codecov
  # cppcheck
  - sudo apt-get install -qq cppcheck
  # OCLint
  - ./install_oclint.sh
  # GraphViz
  - sudo apt-get install -qq graphviz
  - # PDF
  - sudo apt-get install -qq babel
  - sudo apt-get install -qq lyx
  - sudo apt-get install -qq texlive # For pdflatex
  - sudo apt-get install -qq texlive-* # For pdflatex

script: 
  - type dot
  # No GraphViz, test
  - qmake BoostGraphTutorial/boost_graph_tutorial_test_no_graphviz.pro
  - make debug
  - ./boost_graph_tutorial_test_no_graphviz
  # No Graphviz, normal
  #- qmake BoostGraphTutorial/boost_graph_tutorial_no_graphviz.pro
  #- make debug
  #- ./boost_graph_tutorial_no_graphviz
  # Graphviz, test
  - qmake BoostGraphTutorial/boost_graph_tutorial_test.pro
  - make debug
  - ./boost_graph_tutorial_test
  # Graphviz, normal
  #- qmake BoostGraphTutorial/boost_graph_tutorial.pro
  #- make debug
  #- ./boost_graph_tutorial
  # Prepare to get code coverag
  - cp debug/*.gcda BoostGraphTutorial # Will this work?
  - cp debug/*.gcno BoostGraphTutorial # Will this work?
  - cp debug/*.o BoostGraphTutorial # Will this work?
  - cp debug/*.gcda . # Will this work?
  - cp debug/*.gcno . # Will this work?
  - cp debug/*.o . # Will this work?
  # Get code coverage
  - ./get_code_cov.sh
  - codecov
  # cppcheck
  - cppcheck -q .
  # Call OCLint, takes to long...
  # - travis_wait 60 ./do_oclint.sh

after_success:
  - bash <(curl -s https://codecov.io/bash)

after_failure:
  - pdflatex -v
  - cd ~; find . | egrep "\.tex"
  - cd ~; find . | egrep "\.log"
  - cd /usr; find . | egrep "/texlive$"
  - cd /opt; find . | egrep "/texlive$"
  - cd /; find . | egrep "/texlive$"
  #- which tlmgr
  - echo $PATH
  - cat /home/travis/build/richelbilderbeek/BoostGraphTutorial/BoostGraphTutorial/boost_graph_tutorial.tex

